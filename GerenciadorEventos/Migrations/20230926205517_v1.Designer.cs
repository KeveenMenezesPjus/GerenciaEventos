// <auto-generated />
using System;
using GerenciadorEventos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorEventos.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230926205517_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GerenciadorEventos.Models.CategoriaEventoModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CategoriaEventoModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.ComentarioModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<string>("TextoComentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ComentarioModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.EventoModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaEventoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizadorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaEventoID");

                    b.HasIndex("OrganizadorID");

                    b.ToTable("EventoModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.InscricaoModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("InscricaoModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.TipoUsuarioModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoUsuarioModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.UsuarioModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.ComentarioModel", b =>
                {
                    b.HasOne("GerenciadorEventos.Models.EventoModel", "Evento")
                        .WithMany("Comentarios")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorEventos.Models.UsuarioModel", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.EventoModel", b =>
                {
                    b.HasOne("GerenciadorEventos.Models.CategoriaEventoModel", "CategoriaEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("CategoriaEventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorEventos.Models.UsuarioModel", "Organizador")
                        .WithMany("EventosOrganizados")
                        .HasForeignKey("OrganizadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaEvento");

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.InscricaoModel", b =>
                {
                    b.HasOne("GerenciadorEventos.Models.EventoModel", "Evento")
                        .WithMany("Inscricoes")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorEventos.Models.UsuarioModel", "Usuario")
                        .WithMany("Inscricoes")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.UsuarioModel", b =>
                {
                    b.HasOne("GerenciadorEventos.Models.TipoUsuarioModel", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.CategoriaEventoModel", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.EventoModel", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.TipoUsuarioModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GerenciadorEventos.Models.UsuarioModel", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("EventosOrganizados");

                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
